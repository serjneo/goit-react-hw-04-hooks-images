{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/Searchbar/Searchbar.jsx","components/Loader/Loader.jsx","services/imageApi.js","App.js","index.js"],"names":["ImageGalleryItem","webformatURL","largeImageURL","tags","setModalImgInfo","className","src","alt","onClick","ImageGallery","images","map","id","Button","onLoadMore","type","modalRoot","document","getElementById","Modal","onClose","children","useEffect","handleKeyPressESC","e","code","window","addEventListener","removeEventListener","createPortal","currentTarget","target","Searchbar","onSubmit","useState","text","setText","preventDefault","trim","toast","error","onChange","value","toLowerCase","autoComplete","autoFocus","placeholder","Load","color","height","width","timeout","axios","defaults","baseURL","fetchImages","page","a","request","get","data","hits","App","setPage","setImages","showModal","setShowModal","setError","status","setStatus","setLargeImageURL","setTags","getImages","length","prevState","pageScroll","console","log","message","toggleModal","scrollTo","top","documentElement","scrollHeight","behavior","transition","Zoom","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f29e6aee.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport './ImageGalleryItem.scss';\r\n\r\nfunction ImageGalleryItem({\r\n  webformatURL,\r\n  largeImageURL,\r\n  tags,\r\n  setModalImgInfo,\r\n}) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        onClick={() => setModalImgInfo({ largeImageURL, tags })}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  setModalImgInfo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\nimport './ImageGallery.scss';\r\n\r\n function ImageGallery({ images, setModalImgInfo }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(({ webformatURL, largeImageURL, tags, id }) => (\r\n        <ImageGalleryItem\r\n          key={id}\r\n          webformatURL={webformatURL}\r\n          largeImageURL={largeImageURL}\r\n          tags={tags}\r\n          setModalImgInfo={setModalImgInfo}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  setModalImgInfo: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import PropTypes from 'prop-types';\r\nimport './Button.scss';\r\n\r\n function Button({ onLoadMore }) {\r\n  return (\r\n    <button type=\"button\" className=\"Button\" onClick={onLoadMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onLoadMore: PropTypes.func.isRequired,\r\n};\r\nexport default Button;","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport './Modal.scss'\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nfunction Modal({onClose, children}) {\r\n    useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyPressESC);\r\n\r\n    function handleKeyPressESC(e) {\r\n      if (e.code === 'Escape') {\r\n        onClose();\r\n      }\r\n    }\r\n    return () => window.removeEventListener('keydown', handleKeyPressESC);\r\n    }, [onClose]);\r\n  \r\n    const handleOverlayClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            onClose(); \r\n        }\r\n  }\r\n  \r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={handleOverlayClick}>\r\n        <div className=\"Modal\">{children}</div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Modal;","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './Searchbar.scss';\r\n\r\nfunction Searchbar({onSubmit}) {\r\n  const [text, setText] = useState('');\r\n    \r\n  const handleTextChange = e => {\r\n    setText(e.target.value.toLowerCase());\r\n    };\r\n    \r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (text.trim() === '') {\r\n        toast.error('Enter text');\r\n        return;\r\n    }\r\n    onSubmit(text);\r\n    setText('');\r\n  };\r\n\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n          <button type=\"submit\" className= \"SearchForm-button\">\r\n            <span className= \"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={handleTextChange}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;","import Loader from 'react-loader-spinner';\r\nimport './Loader.scss'\r\n\r\n\r\n\r\nconst Load =  () =>{\r\n  return (\r\n    <div className=\"Loader\">\r\n      <Loader\r\n        type=\"Rings\"\r\n        color=\"#00BFFF\"\r\n        height={150}\r\n        width={150}\r\n        timeout={2000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Load;","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api';\r\n\r\nconst fetchImages = async (text, page) => {\r\n  const API_KEY = '22969482-37b7f2c7deb329174334b9da4';\r\n  const perPage = 12;\r\n  const request = `/?image_type=photo&orientation=horizontal&q=${text}&page=${page}&per_page=${perPage}&key=${API_KEY}`;\r\n  const { data } = await axios.get(request);\r\n  const images = data.hits;\r\n  return images;\r\n};\r\n\r\nexport default fetchImages;\r\n","import { useState, useEffect } from 'react';\nimport { toast, ToastContainer, Zoom } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\nimport Searchbar from './components/Searchbar';\nimport Load from './components/Loader';\nimport fetchImages from './services/imageApi';\nimport './App.scss';\n\nexport default function App() {\n  const [text, setText] = useState('');\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('idle');\n  const [largeImageURL, setLargeImageURL] = useState(null);\n  const [tags, setTags] = useState(null);\n\n  useEffect(() => {\n    if (!text) {\n      return;\n    }\n    getImages();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [text]);\n\n  const getImages = async () => {\n    setStatus('pending');\n    try {\n      const images = await fetchImages(text, page);\n      if (images.length < 1) {\n        toast.error('Nothing found, specify your search');\n      }\n      setImages(prevState => [...prevState, ...images]);\n      setStatus('resolved');\n      setPage(prevState => prevState + 1);\n      if (page !== 1) {\n        pageScroll();\n      }\n    } catch (error) {\n      console.log('Error:', error.message);\n      setError({ error });\n    } finally {\n      setStatus('resolved');\n    }\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const setModalImgInfo = ({ largeImageURL, tags }) => {\n    setLargeImageURL(largeImageURL);\n    setTags(tags);\n    toggleModal();\n  };\n\n  const pageScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const onSubmit = text => {\n    setText(text);\n    setPage(1);\n    setImages([]);\n  };\n\n  const onLoadMore = () => {\n    getImages();\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <Searchbar onSubmit={onSubmit} />\n        {status === 'pending' && <Load />}\n        <ImageGallery images={images} setModalImgInfo={setModalImgInfo} />\n        {images.length > 0 && <Button onLoadMore={onLoadMore} />}\n        {showModal && (\n          <Modal onClose={toggleModal}>\n            <img src={largeImageURL} alt={tags} />\n          </Modal>\n        )}\n      </div>\n      <ToastContainer transition={Zoom} />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>{<App />}</React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}